openapi: 3.0.0
info:
  title: Masterblog API
  description: API documentation
  version: 1.0.0
servers:
  - url: http://192.168.178.70:5002/api


paths:
  /posts:
    get:
      tags:
        - "Posts"
      summary: "Get all posts"
      description: "Retrieve a list of all blog posts."
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "First post"
                    content:
                      type: string
                      example: "This is the first post."
    post:
      tags:
        - "Posts"
      summary: "Add a new post"
      description: "Create a new blog post with a unique ID."
      parameters:
        - name: title
          in: path
          required: true
          description: "Title of the new post"
          schema:
            type: string
            example: "New Post"
        - name: content
          in: path
          required: true
          description: "Text of the new post"
          schema:
            type: string
            example: "This is a new post."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  description: "Title for new post"
                  example: "New Post Title"
                content:
                  type: string
                  description: "Text for new post"
                  example: "This is the content of the new post."
      responses:
        201:
          description: "Post created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  title:
                    type: string
                    example: "New Post Title"
                  content:
                    type: string
                    example: "This is the content of the new post."
        400:
          description: "Invalid input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid post data"

  /posts/{id}:
    delete:
      tags:
        - "Posts"
      summary: "Delete a post"
      description: "Delete a blog post by its unique ID."
      parameters:
        - name: id
          in: path
          required: true
          description: "ID of the post to delete"
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: "Post deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post with id 1 has been deleted successfully."
        404:
          description: "Post not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Post with ID:1 not Found"
    put:
      tags:
        - "Posts"
      summary: "Update a post"
      description: "Update an existing blog post by its unique ID."
      parameters:
        - name: id
          in: path
          required: true
          description: "ID of the post to update"
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  example: "Updated Post Title"
                content:
                  type: string
                  example: "This is the updated content."
      responses:
        200:
          description: "Post updated successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Updated Post Title"
                  content:
                    type: string
                    example: "This is the updated content."
        400:
          description: "Invalid input data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid post data"
        404:
          description: "Post not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Post with ID:1 not Found"

  /search:
    get:
      tags:
        - "Posts"
      summary: "Search posts"
      description: "Search for posts by title or content."
      parameters:
        - name: title
          in: query
          required: false
          description: "Search term for post titles"
          schema:
            type: string
            example: "First"
        - name: content
          in: query
          required: false
          description: "Search term for post content"
          schema:
            type: string
            example: "content"
      responses:
        200:
          description: "Search results"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "First post"
                    content:
                      type: string
                      example: "This is the first post."
        400:
          description: "Invalid search parameter"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid search parameter"
        404:
          description: "No results found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Nothing found"
